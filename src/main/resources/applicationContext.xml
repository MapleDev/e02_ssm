<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--Spring配置数据源及加载配置文件-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config/*.properties</value>
            </list>
        </property>
    </bean>

    <!--1. 通过注解，将Service的生命周期纳入Spring的管理-->
    <context:annotation-config/>
    <context:component-scan base-package="com.xznn.service"/>
    <!--<context:component-scan base-package="com.xznn.service.impl"/>-->

    <!--2. 配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <!--
        &lt;!&ndash; 连接池启动时的初始值 &ndash;&gt;
        <property name="initialSize" value="${db.initialSize}"/>
        &lt;!&ndash; 连接池的最大值 &ndash;&gt;
        <property name="maxActive" value="${db.maxActive}"/>
        &lt;!&ndash; 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 &ndash;&gt;
        <property name="maxIdle" value="${db.maxIdle}"/>
        &lt;!&ndash; 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 &ndash;&gt;
        <property name="minIdle" value="${db.minIdle}"/>
        &lt;!&ndash; 最大建立连接等待时间。如果超过此时间将接到异常。设为－1表示无限制 &ndash;&gt;
        <property name="maxWait" value="${db.maxWait}"/>
        &lt;!&ndash;#给出一条简单的sql语句进行验证 &ndash;&gt;
        &lt;!&ndash;<property name="validationQuery" value="select getdate()" />&ndash;&gt;
        <property name="defaultAutoCommit" value="${db.defaultAutoCommit}"/>
        &lt;!&ndash; 回收被遗弃的（一般是忘了释放的）数据库连接到连接池中 &ndash;&gt;
        &lt;!&ndash;<property name="removeAbandoned" value="true" />&ndash;&gt;
        &lt;!&ndash; 数据库连接过多长时间不用将被视为被遗弃而收回连接池中 &ndash;&gt;
        &lt;!&ndash;<property name="removeAbandonedTimeout" value="120" />&ndash;&gt;
        &lt;!&ndash; #连接的超时时间，默认为半小时。 &ndash;&gt;
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"/>

        &lt;!&ndash;# 失效检查线程运行时间间隔，要小于MySQL默认&ndash;&gt;
        <property name="timeBetweenEvictionRunsMillis" value="40000"/>
        &lt;!&ndash;# 检查连接是否有效&ndash;&gt;
        <property name="testWhileIdle" value="true"/>
        &lt;!&ndash;# 检查连接有效性的SQL语句&ndash;&gt;
        <property name="validationQuery" value="SELECT 1 FROM dual"/>
        -->
    </bean>

    <!--3. 扫描存放SQL语句的Category.xml-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <property name="typeAliasesPackage" value="com.xznn.pojo"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
        <!--<property name="mapperLocations" value="classpath:mapper/*.xml"/>-->
        <!--<property name="configLocation" value="classpath:config/mybatis-config.xml"></property>-->

        <!-- 分页插件 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>

    </bean>

    <!--4. 扫描Mapper，并将其生命周期纳入Spring的管理-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xznn.mapper"/>
    </bean>


</beans>